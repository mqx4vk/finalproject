[gd_scene load_steps=12 format=3 uid="uid://42i628og6lnf"]

[ext_resource type="Texture2D" uid="uid://c3q0esobpl6aj" path="res://Character/mech sprite 2.png" id="1_flw5w"]

[sub_resource type="GDScript" id="GDScript_nhquf"]
script/source = "extends CharacterBody2D

@export var speed : float = 200.0
@export var jump_velocity : float = -150.0
@export var double_jump_velocity : float = -100

@onready var animated_sprite : AnimatedSprite2D = $AnimatedSprite2D
@onready var active = true

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")
var has_double_jumped : bool = false
var animation_locked : bool = false
var direction : Vector2 = Vector2.ZERO
var was_in_air : bool = false

func _physics_process(delta):
	if not active: 
		animated_sprite.hide()
	# Add the gravity.
	if not is_on_floor():
		velocity.y += gravity * delta
		was_in_air = true
	else:
		has_double_jumped = false
		
		if was_in_air == true:
			land()
			
		was_in_air = false

	# Handle Jump.
	if Input.is_action_just_pressed(\"jump\"):
		if is_on_floor():
			# Normal jump from floor
			jump()
		elif not has_double_jumped:
			# Double jump in air
			double_jump()
			

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	direction = Input.get_vector(\"left\", \"right\", \"up\", \"down\")
	
	if direction.x != 0 && animated_sprite.animation != \"jump_end\":
		velocity.x = direction.x * speed
	else:
		velocity.x = move_toward(velocity.x, 0, speed)

	move_and_slide()
	update_animation()
	update_facing_direction()
	
func update_animation():
	if not animation_locked:
		if not is_on_floor():
			animated_sprite.play(\"jump_loop\")
		else:
			if direction.x != 0:
				animated_sprite.play(\"run\")
			else:
				animated_sprite.play(\"idle\")

func update_facing_direction():
	if direction.x > 0:
		animated_sprite.flip_h = false
	elif direction.x < 0:
		animated_sprite.flip_h = true
		
func jump():
	velocity.y = jump_velocity
	animated_sprite.play(\"jump_start\")
	animation_locked = true
	
func double_jump():
	velocity.y = double_jump_velocity
	animated_sprite.play(\"jump_double\")
	animation_locked = true
	has_double_jumped = true

func land():
	animated_sprite.play(\"jump_end\")
	animation_locked = true

func _on_animated_sprite_2d_animation_finished():
	if([\"jump_end\", \"jump_start\", \"jump_double\"].has(animated_sprite.animation)):
		animation_locked = false
		
"

[sub_resource type="AtlasTexture" id="AtlasTexture_ml0fb"]
atlas = ExtResource("1_flw5w")
region = Rect2(0, 171, 180, 171)

[sub_resource type="AtlasTexture" id="AtlasTexture_awkc5"]
atlas = ExtResource("1_flw5w")
region = Rect2(0, 342, 180, 171)

[sub_resource type="AtlasTexture" id="AtlasTexture_2l8df"]
atlas = ExtResource("1_flw5w")
region = Rect2(180, 342, 180, 171)

[sub_resource type="AtlasTexture" id="AtlasTexture_a0xya"]
atlas = ExtResource("1_flw5w")
region = Rect2(360, 342, 180, 171)

[sub_resource type="AtlasTexture" id="AtlasTexture_iydys"]
atlas = ExtResource("1_flw5w")
region = Rect2(540, 342, 180, 171)

[sub_resource type="AtlasTexture" id="AtlasTexture_thj1r"]
atlas = ExtResource("1_flw5w")
region = Rect2(720, 342, 180, 171)

[sub_resource type="AtlasTexture" id="AtlasTexture_778yy"]
atlas = ExtResource("1_flw5w")
region = Rect2(900, 342, 180, 171)

[sub_resource type="SpriteFrames" id="SpriteFrames_sjg2r"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ml0fb")
}],
"loop": true,
"name": &"idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_awkc5")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2l8df")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_a0xya")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_iydys")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_thj1r")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_778yy")
}],
"loop": true,
"name": &"run",
"speed": 5.0
}]

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_l8wkc"]
radius = 50.0
height = 122.0

[node name="Player2" type="CharacterBody2D"]
script = SubResource("GDScript_nhquf")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
sprite_frames = SubResource("SpriteFrames_sjg2r")
animation = &"run"
frame_progress = 0.260456
speed_scale = 2.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
light_mask = 2
visibility_layer = 2
position = Vector2(-13, 5)
shape = SubResource("CapsuleShape2D_l8wkc")
